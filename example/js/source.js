// Generated by CoffeeScript 1.6.3
(function(){var e,t,n,r,i,s,o,u;u="jQuery.keyframes";e='<p><a href="https://github.com/Ianus/jQuery.Keyframes">jQuery.Keyframes</a> is forked from <a href="https://github.com/krazyjakee/">@krazyjakee</a>\'s <a href="https://github.com/krazyjakee/jQuery-Keyframes/">jQuery-Keyframes</a></p>\n<p><a href="https://github.com/Ianus/jQuery.Keyframes">jQuery.Keyframes</a> like <a href="https://github.com/krazyjakee/jQuery-Keyframes/">jQuery-Keyframes</a> generates and plays CSS3 keyframes quickly and easily allowing you to concentrate on the content of your project whilst cutting down code.</p>\n<p><a href="https://github.com/Ianus/jQuery.Keyframes">jQuery.Keyframes</a> introduces</p>\n<ul>\n<li>some changes in the API </li>\n<li>$.keyframe.isSupported() to detect CSS animation support</li>\n<li>10% smaller minified version (2.256 kb vs 2.453 kb)</li>\n<li>support for keyframe redefinition: if you redifine an existing keyframe, running animations will reflect those changes</li>\n</ul>';n="https://github.com/Ianus/jQuery.Keyframes";t="/archive/master.zip";s='// SETTERS\n\n// Translate (values in px)\n$("#square").css("translateX", 20);\n$("#square").css("translateY", -100);\n\n// ...this works as well\n$("#square").css("translateX", "20px");\n$("#square").css("translateY", "-100px");\n \n// 20deg 2D rotation (values in deg)\n$("#square").css("rotate", 20);\n\n// 20deg 3D rotations (values in deg)\n$("#square").css("rotateX", 20);\n$("#square").css("rotateY", 20);\n$("#square").css("rotateZ", 20);\n\n// ...this works as well\n$("#square").css("rotate",  "20deg");\n$("#square").css("rotateX", "20deg");\n$("#square").css("rotateY", "20deg");\n$("#square").css("rotateZ", "20deg");\n\n\n// Scale\n$("#square").css("scale", 1.2);\n$("#square").css("scaleX", 1.2);\n$("#square").css("scaleY", 1.2);\n$("#square").css("scaleZ", 1.2);\n\n// Skew (values in deg)\n$("#square").css("skewX, 30);\n$("#square").css("skewY", 30);\n\n//...this works as well\n$("#square").css("skewX, "30deg");\n$("#square").css("skewY", "30deg");\n\n// Perspective (values in px)\n$("#square").css("perspective", 1000)\n\n//...this works as well\n$("#square").css("perspective", "1000px")\n\n// Incremental and decremental setters are supported\n$("#square").css("rotate", "+=20");\n$("#square").css("rotate", "-=20");\n\n\n// GETTERS\n// All the getters return numeric values\n// For rotations: values are returned in deg\n// For translations: value are returned in px\n// For skews: values are returned in deg\n// For perspective: values are returned in px\n// Here some examples:\n\n\n$("#square").css("rotate", "20deg");\n$("#square").css("rotate");\n// This will return 20\n\n\n// Animations\n$("#square").animate({ rotate: 20, translateX: 100}, 600);';o={"&":"&amp;","<":"&lt;",">":"&gt;"};r=function(e){return o[e]||e};i=function(e){return e.replace(/[&<>]/g,r)};$(function(){var r;r=i(s);$("#code").html(r);$("#page-title .anchor").text(u);$("#page-comment").html(e);$("#forkme-banner, #page-title .anchor").attr("href",n);return $("#download").attr("href",n+t)})}).call(this);